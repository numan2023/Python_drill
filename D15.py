# 引き算・掛け算

# 整数 A, B が与えられます。A と B の差 D と積 P を半角スペース区切りで出力してください。

# 入力される値
# A B

# 期待する出力
# 期待する結果 D と P を半角スペース区切り一行で出力してください。末尾に改行を入れ、余計な文字、空行を含んではいけません。
# D P

# 条件
# すべてのテストケースにおいて、以下の条件をみたします。
# ・ A, B は整数
# ・ A, B は 0 以上 1,000 未満

# 入力例1
# 397 646

# 出力例1
# -249 256462

# 入力例2
# 343 444

# 出力例2
# -101 152292

# 失敗コード-------------
s = input()
t = input() # eoferror: eof when reading a line
# -> エラー発生理由：入力値がa bと半角スペースでsに入力されるため。

d = s - t
p = s * t

print(f"{d} {p}")
# 失敗コード-------------

# 解答例
# -----------------------------
# 2つの入力値を受け取る関数の組み合わせによって実現する
# input().spllit()で1行で与えられる文字列を半角スペース区切りで文字列のリストを生成。
# map関数：入力値を第二引数に与え、第一引数に変更したい関数を指定。今回は整数型に変換したいので、第一引数にint関数を使用。
a, b = map(int, input().split())

print(a - b, a * b)

# 参考
# map関数：第一引数に関数、第二引数にシーケンスを指定し、複数の値に対してまとめて関数を適用させることができる。
  #シーケンス(sequence)：あらかじめ決められた順序で処理を行うこと（連続、連続して起こる順序）

# lambda(ラムダ式、無名関数)：def文で関数を定義するが、lambdaで名前を持たない無名関数を作成することもできる。
  #lambdaは引数として関数を指定する場合などに使うと便利。
  # def 名前(引数, 引数、 ...):
  #     return 式
  # 名前 = lambda 引数, 引数, ...: 式
# 具体例）-------
  # def add_def(a, b=1):
  #   return a + b

  # add_lambda = lambda a, b=1: a + b

  # print(add_def(3, 4))
  # # 7

  # print(add_def(3))
  # # 4